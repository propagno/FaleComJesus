services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: falecomjesus-backend
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
      - rabbitmq
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/falecomjesus
      - REDIS_URL=redis://redis:6379/0
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - SECRET_KEY=${SECRET_KEY:-dev_key}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-dev_jwt_key}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-}
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    volumes:
      - ./backend:/app
    ports:
      - "5000:5000"
    networks:
      - app-network

  # Frontend App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: falecomjesus-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:5000
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - app-network

  # PostgreSQL Database
  postgres:
    image: postgres:13-alpine
    container_name: falecomjesus-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=falecomjesus
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  # Redis Cache
  redis:
    image: redis:6-alpine
    container_name: falecomjesus-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - app-network

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: falecomjesus-rabbitmq
    restart: unless-stopped
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - app-network

  # Elasticsearch (for logging and monitoring)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: falecomjesus-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - app-network

  # Kibana (for visualizing Elasticsearch data)
  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    container_name: falecomjesus-kibana
    restart: unless-stopped
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - app-network

  # Filebeat (for log shipping)
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.14.0
    container_name: falecomjesus-filebeat
    restart: unless-stopped
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: filebeat -e -strict.perms=false
    depends_on:
      - elasticsearch
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  elasticsearch_data: 